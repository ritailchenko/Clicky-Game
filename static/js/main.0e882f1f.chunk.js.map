{"version":3,"sources":["components/Navbar/Navbar.js","components/Jumbotron/Jumbotron.js","components/Card/Card.js","components/Footer/Footer.js","App.js","index.js"],"names":["Navbar","react_default","a","createElement","className","this","props","score","topscore","Component","Jumbotron","Card","onClick","imageClick","alt","image","replace","src","Footer","App","state","cards","clickedCard","event","currentCard","target","_this","indexOf","setState","card","sort","b","Math","random","alert","concat","_this2","components_Navbar_Navbar","components_Jumbotron_Jumbotron","map","components_Card_Card","id","key","components_Footer_Footer","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"ypBAkBeA,0LAbP,OACIC,EAAAC,EAAAC,cAAA,OAAKC,UAAW,0CAChBH,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,MAAIC,UAAY,YAAhB,0BAEAH,EAAAC,EAAAC,cAAA,MAAIC,UAAY,cAAhB,UAAqCC,KAAKC,MAAMC,OAChDN,EAAAC,EAAAC,cAAA,MAAIC,UAAY,aAAhB,eAAyCC,KAAKC,MAAME,mBAR/CC,cCMNC,SANG,kBACVT,EAAAC,EAAAC,cAAA,UAAQC,UAAY,UACpBH,EAAAC,EAAAC,cAAA,wFCMOQ,SARF,SAAAL,GAAK,OACdL,EAAAC,EAAAC,cAAA,OAAKC,UAAY,OAAOQ,QAAWN,EAAMO,YACrCZ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACXH,EAAAC,EAAAC,cAAA,OAAKW,IAAKR,EAAMS,MAAMC,QAAQ,OAAQ,IAAKC,IAAK,SAAWX,EAAMS,YCG9DG,SANA,kBACXjB,EAAAC,EAAAC,cAAA,UAAQC,UAAY,UAChBH,EAAAC,EAAAC,cAAA,mCCkFOgB,oNA9EbC,MAAQ,CACNC,QACAC,YAAa,GACbf,MAAO,EACPC,SAAU,KAIZK,WAAa,SAAAU,GACX,IAAMC,EAAcD,EAAME,OAAOX,IACNY,EAAKN,MAAME,YAAYK,QAAQH,IAAgB,GAIxEE,EAAKE,SAAS,CACZC,KAAMH,EAAKN,MAAMC,MAAMS,KAAK,SAAS5B,EAAE6B,GACrC,MAAO,GAAMC,KAAKC,WAEpBX,YAAa,GACbf,MAAO,IAET2B,MAAM,0BAINR,EAAKE,SACH,CACEC,KAAMH,EAAKN,MAAMC,MAAMS,KAAK,SAAS5B,EAAG6B,GACtC,MAAO,GAAMC,KAAKC,WAEpBX,YAAaI,EAAKN,MAAME,YAAYa,OAClCX,GAEFjB,MAAOmB,EAAKN,MAAMb,MAAQ,EAC1BC,SAAUkB,EAAKN,MAAMb,MAAQ,EAAImB,EAAKN,MAAMZ,SAAWkB,EAAKN,MAAMb,MAAQ,EAAGmB,EAAKN,MAAMZ,UAG5F,WAC2B,KAArBkB,EAAKN,MAAMb,QACb2B,MAAM,YACNR,EAAKE,SAAS,CACZC,KAAMH,EAAKN,MAAMC,MAAMS,KAAK,SAAS5B,EAAG6B,GACtC,MAAO,GAAMC,KAAKC,WAEpBX,YAAa,GACbf,MAAO,gFASR,IAAA6B,EAAA/B,KACP,OACEJ,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACkC,EAAD,CACE9B,MAAOF,KAAKe,MAAMb,MAClBC,SAAUH,KAAKe,MAAMZ,WAEvBP,EAAAC,EAAAC,cAACmC,EAAD,MACArC,EAAAC,EAAAC,cAAA,OAAKC,UAAY,WACdC,KAAKe,MAAMC,MAAMkB,IAAI,SAAAV,GAAI,OACxB5B,EAAAC,EAAAC,cAACqC,EAAD,CACE3B,WAAcuB,EAAKvB,WACnB4B,GAAIZ,EAAKY,GACTC,IAAKb,EAAKY,GACV1B,MAAOc,EAAKd,WAIlBd,EAAAC,EAAAC,cAACwC,EAAD,cAzEUlC,cCFlBmC,IAASC,OAAO5C,EAAAC,EAAAC,cAAC2C,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.0e882f1f.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport \"./Navbar.css\";\n\nclass Navbar extends Component {\n    render() {\n        return (\n            <nav className =\"navbar navbar-default navbar-fixed-top\">\n            <ul>\n                <li className = \"itemLeft\">Family guy Clicky Game</li>\n                {/* <li className = \"itemCenter\">{this.props.win}</li> */}\n                <li className = \"itemCenter\">Score: {this.props.score}</li>\n                <li className = \"itemRight\"> Top Score: {this.props.topscore}</li>\n            </ul>\n            </nav>\n        );\n    }\n}\n\nexport default Navbar;","import React from \"react\";\nimport \"./Jumbotron.css\";\n\nconst Jumbotron = () => (\n        <header className = \"header\">\n        <p>Click on an image to earn points, but don't click on any more than once!</p>\n    </header>\n);\n    \nexport default Jumbotron;","import React from \"react\";\nimport \"./Card.css\";\n\nconst Card = props => (\n    <div className = \"card\" onClick = {props.imageClick}>\n        <div className=\"img-container\">\n            <img alt={props.image.replace(\".jpg\", \"\")} src={\"./img/\" + props.image} />\n        </div>\n    </div>\n);\n\nexport default Card; ","import React from \"react\";\nimport \"./Footer.css\";\n\nconst Footer = () => (\n    <header className = \"footer\">\n        <p>Clicky Game!</p>\n    </header>\n);\n\nexport default Footer;","import React, { Component } from 'react';\nimport Navbar from \"./components/Navbar\";\nimport Jumbotron from \"./components/Jumbotron\";\nimport Card from \"./components/Card\";\nimport Footer from \"./components/Footer\";\nimport cards from \"./cards.json\";\nimport './App.css';\n//sets state to 0 or empty\nclass App extends Component {\n  state = {\n    cards,\n    clickedCard: [], \n    score: 0,\n    topscore: 0\n  };\n\n  //when you click on a card its taken out of the array\n  imageClick = event => {\n    const currentCard = event.target.alt;\n    const CardAlreadyClicked = this.state.clickedCard.indexOf(currentCard) > -1;\n\n  //if you click on a card that has already been selected, the game is reset and cards reordered\n    if (CardAlreadyClicked) {\n      this.setState({\n        card: this.state.cards.sort(function(a,b) {\n          return 0.5 - Math.random();\n        }),\n        clickedCard: [], \n        score: 0\n      });\n      alert(\"You lose. Play again?\");\n\n  //if you click on an available card you score is increased and cards reordered  \n    } else {\n      this.setState (\n        {\n          card: this.state.cards.sort(function(a, b) {\n            return 0.5 - Math.random();\n          }),\n          clickedCard: this.state.clickedCard.concat(\n            currentCard\n          ),\n          score: this.state.score + 1,\n          topscore: this.state.score + 1 > this.state.topscore ? this.state.score + 1: this.state.topscore\n        },\n  // if you get all 12 cards correct you get a congrats message and the game resets\n      () => {\n        if (this.state.score === 12) {\n          alert(\"YOU WIN!\");\n          this.setState({\n            card: this.state.cards.sort(function(a, b) {\n              return 0.5 - Math.random();\n            }),\n            clickedCard: [],\n            score: 0\n          });\n         }\n       }      \n      );\n    }\n  };\n\n  //the order of components to be rendered: navbar, jumbotron, card, footer\n  render() {\n    return (\n      <div>\n        <Navbar\n          score={this.state.score}\n          topscore={this.state.topscore}\n        />\n        <Jumbotron />\n        <div className = \"wrapper\">\n          {this.state.cards.map(card => (\n            <Card \n              imageClick = {this.imageClick}\n              id={card.id}\n              key={card.id}\n              image={card.image}\n              />\n          ))}\n        </div>\n        <Footer />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\n\n"],"sourceRoot":""}